
Taximetro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800200  00000254  000002e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000254  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800234  00800234  0000031c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000034c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f88  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cb4  00000000  00000000  00001384  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005ce  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  00002608  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b2  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000564  00000000  00000000  00002cca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  0000322e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	e2 c0       	rjmp	.+452    	; 0x21a <__vector_21>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 e5       	ldi	r30, 0x54	; 84
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 33       	cpi	r26, 0x34	; 52
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e3       	ldi	r26, 0x34	; 52
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 33       	cpi	r26, 0x36	; 54
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	3a d0       	rcall	.+116    	; 0x194 <main>
 120:	97 c0       	rjmp	.+302    	; 0x250 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <init_PORTK>:
			 exp = exp*10;
			 count--;
		 }
	 }
	 return num;
 }
 124:	8c e0       	ldi	r24, 0x0C	; 12
 126:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 12a:	8b e0       	ldi	r24, 0x0B	; 11
 12c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 130:	08 95       	ret

00000132 <UART0_init>:
 132:	82 e0       	ldi	r24, 0x02	; 2
 134:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 138:	88 e1       	ldi	r24, 0x18	; 24
 13a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 13e:	86 e0       	ldi	r24, 0x06	; 6
 140:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 144:	87 e6       	ldi	r24, 0x67	; 103
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 14c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 150:	08 95       	ret

00000152 <TIMER0_init>:
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	84 bd       	out	0x24, r24	; 36
 156:	93 e0       	ldi	r25, 0x03	; 3
 158:	95 bd       	out	0x25, r25	; 37
 15a:	16 bc       	out	0x26, r1	; 38
 15c:	99 ef       	ldi	r25, 0xF9	; 249
 15e:	97 bd       	out	0x27, r25	; 39
 160:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 164:	78 94       	sei
 166:	08 95       	ret

00000168 <UART0_putchar>:
 168:	e0 ec       	ldi	r30, 0xC0	; 192
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	90 81       	ld	r25, Z
 16e:	95 ff       	sbrs	r25, 5
 170:	fd cf       	rjmp	.-6      	; 0x16c <UART0_putchar+0x4>
 172:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 176:	08 95       	ret

00000178 <UART0_puts>:
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	ec 01       	movw	r28, r24
 17e:	88 81       	ld	r24, Y
 180:	88 23       	and	r24, r24
 182:	29 f0       	breq	.+10     	; 0x18e <UART0_puts+0x16>
 184:	21 96       	adiw	r28, 0x01	; 1
 186:	f0 df       	rcall	.-32     	; 0x168 <UART0_putchar>
 188:	89 91       	ld	r24, Y+
 18a:	81 11       	cpse	r24, r1
 18c:	fc cf       	rjmp	.-8      	; 0x186 <UART0_puts+0xe>
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	08 95       	ret

00000194 <main>:
 194:	c7 df       	rcall	.-114    	; 0x124 <init_PORTK>
 196:	cd df       	rcall	.-102    	; 0x132 <UART0_init>
 198:	dc df       	rcall	.-72     	; 0x152 <TIMER0_init>
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	92 e0       	ldi	r25, 0x02	; 2
 19e:	ec df       	rcall	.-40     	; 0x178 <UART0_puts>
 1a0:	c6 e0       	ldi	r28, 0x06	; 6
 1a2:	d1 e0       	ldi	r29, 0x01	; 1
 1a4:	11 e0       	ldi	r17, 0x01	; 1
 1a6:	68 94       	set
 1a8:	ee 24       	eor	r14, r14
 1aa:	e3 f8       	bld	r14, 3
 1ac:	ff 24       	eor	r15, r15
 1ae:	f3 94       	inc	r15
 1b0:	68 94       	set
 1b2:	dd 24       	eor	r13, r13
 1b4:	d3 f8       	bld	r13, 3
 1b6:	02 e0       	ldi	r16, 0x02	; 2
 1b8:	88 81       	ld	r24, Y
 1ba:	80 fd       	sbrc	r24, 0
 1bc:	fd cf       	rjmp	.-6      	; 0x1b8 <main+0x24>
 1be:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <rebote>
 1c2:	81 11       	cpse	r24, r1
 1c4:	f9 cf       	rjmp	.-14     	; 0x1b8 <main+0x24>
 1c6:	10 93 35 02 	sts	0x0235, r17	; 0x800235 <rebote>
 1ca:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <__data_end>
 1ce:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 1d2:	81 30       	cpi	r24, 0x01	; 1
 1d4:	51 f4       	brne	.+20     	; 0x1ea <main+0x56>
 1d6:	f7 01       	movw	r30, r14
 1d8:	80 81       	ld	r24, Z
 1da:	87 7f       	andi	r24, 0xF7	; 247
 1dc:	80 83       	st	Z, r24
 1de:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 1e2:	84 e1       	ldi	r24, 0x14	; 20
 1e4:	92 e0       	ldi	r25, 0x02	; 2
 1e6:	c8 df       	rcall	.-112    	; 0x178 <UART0_puts>
 1e8:	e7 cf       	rjmp	.-50     	; 0x1b8 <main+0x24>
 1ea:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 1ee:	81 11       	cpse	r24, r1
 1f0:	06 c0       	rjmp	.+12     	; 0x1fe <main+0x6a>
 1f2:	00 93 00 02 	sts	0x0200, r16	; 0x800200 <__data_start>
 1f6:	83 e2       	ldi	r24, 0x23	; 35
 1f8:	92 e0       	ldi	r25, 0x02	; 2
 1fa:	be df       	rcall	.-132    	; 0x178 <UART0_puts>
 1fc:	dd cf       	rjmp	.-70     	; 0x1b8 <main+0x24>
 1fe:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 202:	82 30       	cpi	r24, 0x02	; 2
 204:	c9 f6       	brne	.-78     	; 0x1b8 <main+0x24>
 206:	10 93 00 02 	sts	0x0200, r17	; 0x800200 <__data_start>
 20a:	f7 01       	movw	r30, r14
 20c:	80 81       	ld	r24, Z
 20e:	8d 25       	eor	r24, r13
 210:	80 83       	st	Z, r24
 212:	8b e2       	ldi	r24, 0x2B	; 43
 214:	92 e0       	ldi	r25, 0x02	; 2
 216:	b0 df       	rcall	.-160    	; 0x178 <UART0_puts>
 218:	cf cf       	rjmp	.-98     	; 0x1b8 <main+0x24>

0000021a <__vector_21>:
 ISR(TIMER0_COMPA_vect)
 {
 21a:	1f 92       	push	r1
 21c:	0f 92       	push	r0
 21e:	0f b6       	in	r0, 0x3f	; 63
 220:	0f 92       	push	r0
 222:	11 24       	eor	r1, r1
 224:	8f 93       	push	r24
	 mSec++;
 226:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <__data_end>
 22a:	8f 5f       	subi	r24, 0xFF	; 255
 22c:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <__data_end>
	 if( (rebote == 1)&&(mSec == 200) )
 230:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <rebote>
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	31 f4       	brne	.+12     	; 0x244 <__vector_21+0x2a>
 238:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <__data_end>
 23c:	88 3c       	cpi	r24, 0xC8	; 200
 23e:	11 f4       	brne	.+4      	; 0x244 <__vector_21+0x2a>
	 {
		 rebote = 0;
 240:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <rebote>
	 }
 }
 244:	8f 91       	pop	r24
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <_exit>:
unsigned int atoi(char *str);


int main(void)
{
	init_PORTK();
 250:	f8 94       	cli

00000252 <__stop_program>:
 252:	ff cf       	rjmp	.-2      	; 0x252 <__stop_program>
